const { cakeActions } = require('../cake/cakeSlice')
const createSlice = require('@reduxjs/toolkit').createSlice

const initialState = {
    numOfIcecreams: 20
}

const icecreamSlice = createSlice({
    name: 'icecreams',
    initialState,
    reducers: {
        ordered: (state) => {
            state.numOfIcecreams--
        },
        restocked: (state, action) => {
            state.numOfIcecreams += action.payload
        }
    },

    // One way to use extraReducers
    //extraReducers: {    //extraReducers allows us to use actions from other slices that are not generated by default with this slice. Let's assume with every cake ordered, an icecream will be given as rewards. Though the iceCream reducers can access to the cake/orddered action, but it can only update it's own state, i.e. numOfIceCreams.
        //['cake/ordered']: (state) => {
        //    state.numOfIcecreams--
        //}
    //}

    // Recommended way of using extraReducer is using Build function
    extraReducers: (builder) => {
        builder.addCase(cakeActions.ordered, (state) => {
            state.numOfIcecreams--
        })
    }
})

module.exports = icecreamSlice.reducer
module.exports.icecreamActions = icecreamSlice.actions